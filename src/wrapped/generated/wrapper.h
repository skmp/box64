/*******************************************************************
 * File automatically generated by rebuild_wrappers.py (v2.5.0.24) *
 *******************************************************************/
#ifndef __WRAPPER_H_
#define __WRAPPER_H_
#include <stdint.h>
#include <string.h>
#include "complext.h"

typedef struct x64emu_s x64emu_t;

// the generic wrapper pointer functions
typedef void (*wrapper_t)(x64emu_t* emu, uintptr_t fnc);


// list of defined wrapper
// E = current x86emu struct
// v = void
// C = unsigned byte c = char
// W = unsigned short w = short
// u = uint32, i = int32
// U = uint64, I = int64
// L = unsigned long, l = signed long (long is an int with the size of a pointer)
// H = Huge 128bits value/struct
// p = pointer, P = void* on the stack
// f = float, d = double, D = long double, K = fake long double
// V = vaargs
// O = libc O_ flags bitfield
// o = stdout
// S = _IO_2_1_stdXXX_ pointer (or FILE*)
// N = ... automatically sending 1 arg
// A = va_list
// 0 = constant 0, 1 = constant 1
// x = float complex
// X = double complex
// b = xcb_connection_t*

void vFE(x64emu_t *emu, uintptr_t fnc);
void vFv(x64emu_t *emu, uintptr_t fnc);
void vFi(x64emu_t *emu, uintptr_t fnc);
void vFu(x64emu_t *emu, uintptr_t fnc);
void vFl(x64emu_t *emu, uintptr_t fnc);
void vFp(x64emu_t *emu, uintptr_t fnc);
void vFS(x64emu_t *emu, uintptr_t fnc);
void iFE(x64emu_t *emu, uintptr_t fnc);
void iFv(x64emu_t *emu, uintptr_t fnc);
void iFi(x64emu_t *emu, uintptr_t fnc);
void iFI(x64emu_t *emu, uintptr_t fnc);
void iFu(x64emu_t *emu, uintptr_t fnc);
void iFf(x64emu_t *emu, uintptr_t fnc);
void iFd(x64emu_t *emu, uintptr_t fnc);
void iFD(x64emu_t *emu, uintptr_t fnc);
void iFl(x64emu_t *emu, uintptr_t fnc);
void iFL(x64emu_t *emu, uintptr_t fnc);
void iFp(x64emu_t *emu, uintptr_t fnc);
void iFO(x64emu_t *emu, uintptr_t fnc);
void iFS(x64emu_t *emu, uintptr_t fnc);
void IFI(x64emu_t *emu, uintptr_t fnc);
void IFf(x64emu_t *emu, uintptr_t fnc);
void IFd(x64emu_t *emu, uintptr_t fnc);
void IFp(x64emu_t *emu, uintptr_t fnc);
void IFS(x64emu_t *emu, uintptr_t fnc);
void WFW(x64emu_t *emu, uintptr_t fnc);
void uFv(x64emu_t *emu, uintptr_t fnc);
void uFi(x64emu_t *emu, uintptr_t fnc);
void uFu(x64emu_t *emu, uintptr_t fnc);
void uFU(x64emu_t *emu, uintptr_t fnc);
void uFp(x64emu_t *emu, uintptr_t fnc);
void uFS(x64emu_t *emu, uintptr_t fnc);
void fFf(x64emu_t *emu, uintptr_t fnc);
void fFp(x64emu_t *emu, uintptr_t fnc);
void dFv(x64emu_t *emu, uintptr_t fnc);
void dFd(x64emu_t *emu, uintptr_t fnc);
void dFp(x64emu_t *emu, uintptr_t fnc);
void DFD(x64emu_t *emu, uintptr_t fnc);
void DFY(x64emu_t *emu, uintptr_t fnc);
void lFE(x64emu_t *emu, uintptr_t fnc);
void lFv(x64emu_t *emu, uintptr_t fnc);
void lFD(x64emu_t *emu, uintptr_t fnc);
void lFl(x64emu_t *emu, uintptr_t fnc);
void lFp(x64emu_t *emu, uintptr_t fnc);
void lFS(x64emu_t *emu, uintptr_t fnc);
void LFv(x64emu_t *emu, uintptr_t fnc);
void LFL(x64emu_t *emu, uintptr_t fnc);
void LFp(x64emu_t *emu, uintptr_t fnc);
void pFE(x64emu_t *emu, uintptr_t fnc);
void pFv(x64emu_t *emu, uintptr_t fnc);
void pFi(x64emu_t *emu, uintptr_t fnc);
void pFu(x64emu_t *emu, uintptr_t fnc);
void pFl(x64emu_t *emu, uintptr_t fnc);
void pFL(x64emu_t *emu, uintptr_t fnc);
void pFp(x64emu_t *emu, uintptr_t fnc);
void pFS(x64emu_t *emu, uintptr_t fnc);
void SFv(x64emu_t *emu, uintptr_t fnc);
void xFx(x64emu_t *emu, uintptr_t fnc);
void XFX(x64emu_t *emu, uintptr_t fnc);
void YFY(x64emu_t *emu, uintptr_t fnc);
void vWp(x64emu_t *emu, uintptr_t fnc);
void iWp(x64emu_t *emu, uintptr_t fnc);
void uWp(x64emu_t *emu, uintptr_t fnc);
void fWp(x64emu_t *emu, uintptr_t fnc);
void vFEi(x64emu_t *emu, uintptr_t fnc);
void vFEp(x64emu_t *emu, uintptr_t fnc);
void vFip(x64emu_t *emu, uintptr_t fnc);
void vFWp(x64emu_t *emu, uintptr_t fnc);
void vFup(x64emu_t *emu, uintptr_t fnc);
void vFLp(x64emu_t *emu, uintptr_t fnc);
void vFpi(x64emu_t *emu, uintptr_t fnc);
void vFpl(x64emu_t *emu, uintptr_t fnc);
void vFpL(x64emu_t *emu, uintptr_t fnc);
void vFpp(x64emu_t *emu, uintptr_t fnc);
void vFpS(x64emu_t *emu, uintptr_t fnc);
void vFpA(x64emu_t *emu, uintptr_t fnc);
void vFSi(x64emu_t *emu, uintptr_t fnc);
void vFSp(x64emu_t *emu, uintptr_t fnc);
void iFEi(x64emu_t *emu, uintptr_t fnc);
void iFEf(x64emu_t *emu, uintptr_t fnc);
void iFEd(x64emu_t *emu, uintptr_t fnc);
void iFEL(x64emu_t *emu, uintptr_t fnc);
void iFEp(x64emu_t *emu, uintptr_t fnc);
void iFii(x64emu_t *emu, uintptr_t fnc);
void iFiI(x64emu_t *emu, uintptr_t fnc);
void iFiu(x64emu_t *emu, uintptr_t fnc);
void iFiU(x64emu_t *emu, uintptr_t fnc);
void iFil(x64emu_t *emu, uintptr_t fnc);
void iFip(x64emu_t *emu, uintptr_t fnc);
void iFiS(x64emu_t *emu, uintptr_t fnc);
void iFui(x64emu_t *emu, uintptr_t fnc);
void iFuu(x64emu_t *emu, uintptr_t fnc);
void iFuL(x64emu_t *emu, uintptr_t fnc);
void iFup(x64emu_t *emu, uintptr_t fnc);
void iFlp(x64emu_t *emu, uintptr_t fnc);
void iFLL(x64emu_t *emu, uintptr_t fnc);
void iFLp(x64emu_t *emu, uintptr_t fnc);
void iFpw(x64emu_t *emu, uintptr_t fnc);
void iFpi(x64emu_t *emu, uintptr_t fnc);
void iFpI(x64emu_t *emu, uintptr_t fnc);
void iFpW(x64emu_t *emu, uintptr_t fnc);
void iFpu(x64emu_t *emu, uintptr_t fnc);
void iFpl(x64emu_t *emu, uintptr_t fnc);
void iFpL(x64emu_t *emu, uintptr_t fnc);
void iFpp(x64emu_t *emu, uintptr_t fnc);
void iFpV(x64emu_t *emu, uintptr_t fnc);
void iFpO(x64emu_t *emu, uintptr_t fnc);
void iFpS(x64emu_t *emu, uintptr_t fnc);
void iFpA(x64emu_t *emu, uintptr_t fnc);
void iFSi(x64emu_t *emu, uintptr_t fnc);
void iFSp(x64emu_t *emu, uintptr_t fnc);
void IFEf(x64emu_t *emu, uintptr_t fnc);
void IFEd(x64emu_t *emu, uintptr_t fnc);
void IFED(x64emu_t *emu, uintptr_t fnc);
void uFii(x64emu_t *emu, uintptr_t fnc);
void uFiS(x64emu_t *emu, uintptr_t fnc);
void uFuu(x64emu_t *emu, uintptr_t fnc);
void uFup(x64emu_t *emu, uintptr_t fnc);
void uFuS(x64emu_t *emu, uintptr_t fnc);
void uFpp(x64emu_t *emu, uintptr_t fnc);
void UFii(x64emu_t *emu, uintptr_t fnc);
void UFuu(x64emu_t *emu, uintptr_t fnc);
void fFEf(x64emu_t *emu, uintptr_t fnc);
void fFif(x64emu_t *emu, uintptr_t fnc);
void fFfi(x64emu_t *emu, uintptr_t fnc);
void fFff(x64emu_t *emu, uintptr_t fnc);
void fFfD(x64emu_t *emu, uintptr_t fnc);
void fFfp(x64emu_t *emu, uintptr_t fnc);
void fFpp(x64emu_t *emu, uintptr_t fnc);
void dFEd(x64emu_t *emu, uintptr_t fnc);
void dFid(x64emu_t *emu, uintptr_t fnc);
void dFdi(x64emu_t *emu, uintptr_t fnc);
void dFdd(x64emu_t *emu, uintptr_t fnc);
void dFdD(x64emu_t *emu, uintptr_t fnc);
void dFdp(x64emu_t *emu, uintptr_t fnc);
void dFll(x64emu_t *emu, uintptr_t fnc);
void dFpp(x64emu_t *emu, uintptr_t fnc);
void DFiD(x64emu_t *emu, uintptr_t fnc);
void DFDi(x64emu_t *emu, uintptr_t fnc);
void DFDD(x64emu_t *emu, uintptr_t fnc);
void DFDp(x64emu_t *emu, uintptr_t fnc);
void DFpp(x64emu_t *emu, uintptr_t fnc);
void lFEi(x64emu_t *emu, uintptr_t fnc);
void lFii(x64emu_t *emu, uintptr_t fnc);
void lFDD(x64emu_t *emu, uintptr_t fnc);
void lFpi(x64emu_t *emu, uintptr_t fnc);
void LFEL(x64emu_t *emu, uintptr_t fnc);
void LFpL(x64emu_t *emu, uintptr_t fnc);
void LFpp(x64emu_t *emu, uintptr_t fnc);
void pFEp(x64emu_t *emu, uintptr_t fnc);
void pFip(x64emu_t *emu, uintptr_t fnc);
void pFui(x64emu_t *emu, uintptr_t fnc);
void pFup(x64emu_t *emu, uintptr_t fnc);
void pFLL(x64emu_t *emu, uintptr_t fnc);
void pFpi(x64emu_t *emu, uintptr_t fnc);
void pFpL(x64emu_t *emu, uintptr_t fnc);
void pFpp(x64emu_t *emu, uintptr_t fnc);
void pFSi(x64emu_t *emu, uintptr_t fnc);
void SFip(x64emu_t *emu, uintptr_t fnc);
void SFpp(x64emu_t *emu, uintptr_t fnc);
void HFII(x64emu_t *emu, uintptr_t fnc);
void HFll(x64emu_t *emu, uintptr_t fnc);
void xFxx(x64emu_t *emu, uintptr_t fnc);
void XFXX(x64emu_t *emu, uintptr_t fnc);
void YFYY(x64emu_t *emu, uintptr_t fnc);
void iWpi(x64emu_t *emu, uintptr_t fnc);
void iWpu(x64emu_t *emu, uintptr_t fnc);
void iWpf(x64emu_t *emu, uintptr_t fnc);
void iWpp(x64emu_t *emu, uintptr_t fnc);
void uWpu(x64emu_t *emu, uintptr_t fnc);
void pWpu(x64emu_t *emu, uintptr_t fnc);
void vFEpi(x64emu_t *emu, uintptr_t fnc);
void vFEpu(x64emu_t *emu, uintptr_t fnc);
void vFEpp(x64emu_t *emu, uintptr_t fnc);
void vFEpV(x64emu_t *emu, uintptr_t fnc);
void vFfpp(x64emu_t *emu, uintptr_t fnc);
void vFdpp(x64emu_t *emu, uintptr_t fnc);
void vFDpp(x64emu_t *emu, uintptr_t fnc);
void vFpii(x64emu_t *emu, uintptr_t fnc);
void vFpip(x64emu_t *emu, uintptr_t fnc);
void vFpLi(x64emu_t *emu, uintptr_t fnc);
void vFpLL(x64emu_t *emu, uintptr_t fnc);
void vFpLp(x64emu_t *emu, uintptr_t fnc);
void vFppi(x64emu_t *emu, uintptr_t fnc);
void vFppl(x64emu_t *emu, uintptr_t fnc);
void vFppL(x64emu_t *emu, uintptr_t fnc);
void vFppp(x64emu_t *emu, uintptr_t fnc);
void vFSpL(x64emu_t *emu, uintptr_t fnc);
void iFEip(x64emu_t *emu, uintptr_t fnc);
void iFEup(x64emu_t *emu, uintptr_t fnc);
void iFEpi(x64emu_t *emu, uintptr_t fnc);
void iFEpL(x64emu_t *emu, uintptr_t fnc);
void iFEpp(x64emu_t *emu, uintptr_t fnc);
void iFEpV(x64emu_t *emu, uintptr_t fnc);
void iFEpA(x64emu_t *emu, uintptr_t fnc);
void iFESp(x64emu_t *emu, uintptr_t fnc);
void iFiii(x64emu_t *emu, uintptr_t fnc);
void iFiiI(x64emu_t *emu, uintptr_t fnc);
void iFiil(x64emu_t *emu, uintptr_t fnc);
void iFiip(x64emu_t *emu, uintptr_t fnc);
void iFiiO(x64emu_t *emu, uintptr_t fnc);
void iFiII(x64emu_t *emu, uintptr_t fnc);
void iFiuu(x64emu_t *emu, uintptr_t fnc);
void iFill(x64emu_t *emu, uintptr_t fnc);
void iFiLi(x64emu_t *emu, uintptr_t fnc);
void iFiLp(x64emu_t *emu, uintptr_t fnc);
void iFiLN(x64emu_t *emu, uintptr_t fnc);
void iFipi(x64emu_t *emu, uintptr_t fnc);
void iFipu(x64emu_t *emu, uintptr_t fnc);
void iFipL(x64emu_t *emu, uintptr_t fnc);
void iFipp(x64emu_t *emu, uintptr_t fnc);
void iFipO(x64emu_t *emu, uintptr_t fnc);
void iFuui(x64emu_t *emu, uintptr_t fnc);
void iFuuu(x64emu_t *emu, uintptr_t fnc);
void iFuLL(x64emu_t *emu, uintptr_t fnc);
void iFuLp(x64emu_t *emu, uintptr_t fnc);
void iFupp(x64emu_t *emu, uintptr_t fnc);
void iFLip(x64emu_t *emu, uintptr_t fnc);
void iFLpp(x64emu_t *emu, uintptr_t fnc);
void iFpii(x64emu_t *emu, uintptr_t fnc);
void iFpiu(x64emu_t *emu, uintptr_t fnc);
void iFpip(x64emu_t *emu, uintptr_t fnc);
void iFpui(x64emu_t *emu, uintptr_t fnc);
void iFpuu(x64emu_t *emu, uintptr_t fnc);
void iFpuU(x64emu_t *emu, uintptr_t fnc);
void iFpuL(x64emu_t *emu, uintptr_t fnc);
void iFpli(x64emu_t *emu, uintptr_t fnc);
void iFpLi(x64emu_t *emu, uintptr_t fnc);
void iFpLu(x64emu_t *emu, uintptr_t fnc);
void iFpLL(x64emu_t *emu, uintptr_t fnc);
void iFpLp(x64emu_t *emu, uintptr_t fnc);
void iFppi(x64emu_t *emu, uintptr_t fnc);
void iFppL(x64emu_t *emu, uintptr_t fnc);
void iFppp(x64emu_t *emu, uintptr_t fnc);
void iFpOu(x64emu_t *emu, uintptr_t fnc);
void iFSIi(x64emu_t *emu, uintptr_t fnc);
void iFSli(x64emu_t *emu, uintptr_t fnc);
void iFSpL(x64emu_t *emu, uintptr_t fnc);
void iFSpp(x64emu_t *emu, uintptr_t fnc);
void iFSpA(x64emu_t *emu, uintptr_t fnc);
void IFiIi(x64emu_t *emu, uintptr_t fnc);
void IFppi(x64emu_t *emu, uintptr_t fnc);
void IFSIi(x64emu_t *emu, uintptr_t fnc);
void uFupp(x64emu_t *emu, uintptr_t fnc);
void uFppi(x64emu_t *emu, uintptr_t fnc);
void UFppi(x64emu_t *emu, uintptr_t fnc);
void fFfff(x64emu_t *emu, uintptr_t fnc);
void fFffp(x64emu_t *emu, uintptr_t fnc);
void fFppi(x64emu_t *emu, uintptr_t fnc);
void fFppL(x64emu_t *emu, uintptr_t fnc);
void fFppp(x64emu_t *emu, uintptr_t fnc);
void dFddd(x64emu_t *emu, uintptr_t fnc);
void dFddp(x64emu_t *emu, uintptr_t fnc);
void dFppi(x64emu_t *emu, uintptr_t fnc);
void dFppp(x64emu_t *emu, uintptr_t fnc);
void DFDDD(x64emu_t *emu, uintptr_t fnc);
void DFppi(x64emu_t *emu, uintptr_t fnc);
void DFppp(x64emu_t *emu, uintptr_t fnc);
void lFiIL(x64emu_t *emu, uintptr_t fnc);
void lFili(x64emu_t *emu, uintptr_t fnc);
void lFipi(x64emu_t *emu, uintptr_t fnc);
void lFipL(x64emu_t *emu, uintptr_t fnc);
void lFpLu(x64emu_t *emu, uintptr_t fnc);
void lFppi(x64emu_t *emu, uintptr_t fnc);
void lFppL(x64emu_t *emu, uintptr_t fnc);
void lFppS(x64emu_t *emu, uintptr_t fnc);
void lFSpl(x64emu_t *emu, uintptr_t fnc);
void LFipL(x64emu_t *emu, uintptr_t fnc);
void LFpip(x64emu_t *emu, uintptr_t fnc);
void LFpWp(x64emu_t *emu, uintptr_t fnc);
void LFpup(x64emu_t *emu, uintptr_t fnc);
void LFpLp(x64emu_t *emu, uintptr_t fnc);
void LFppi(x64emu_t *emu, uintptr_t fnc);
void LFppL(x64emu_t *emu, uintptr_t fnc);
void LFSpL(x64emu_t *emu, uintptr_t fnc);
void pFEip(x64emu_t *emu, uintptr_t fnc);
void pFEpi(x64emu_t *emu, uintptr_t fnc);
void pFEpp(x64emu_t *emu, uintptr_t fnc);
void pFipi(x64emu_t *emu, uintptr_t fnc);
void pFipL(x64emu_t *emu, uintptr_t fnc);
void pFipp(x64emu_t *emu, uintptr_t fnc);
void pFupL(x64emu_t *emu, uintptr_t fnc);
void pFdip(x64emu_t *emu, uintptr_t fnc);
void pFDip(x64emu_t *emu, uintptr_t fnc);
void pFLLp(x64emu_t *emu, uintptr_t fnc);
void pFpiL(x64emu_t *emu, uintptr_t fnc);
void pFpip(x64emu_t *emu, uintptr_t fnc);
void pFpiS(x64emu_t *emu, uintptr_t fnc);
void pFpui(x64emu_t *emu, uintptr_t fnc);
void pFpLL(x64emu_t *emu, uintptr_t fnc);
void pFpLp(x64emu_t *emu, uintptr_t fnc);
void pFppi(x64emu_t *emu, uintptr_t fnc);
void pFppL(x64emu_t *emu, uintptr_t fnc);
void pFppp(x64emu_t *emu, uintptr_t fnc);
void pFSpl(x64emu_t *emu, uintptr_t fnc);
void SFEpp(x64emu_t *emu, uintptr_t fnc);
void SFpLp(x64emu_t *emu, uintptr_t fnc);
void SFppS(x64emu_t *emu, uintptr_t fnc);
void vWpup(x64emu_t *emu, uintptr_t fnc);
void iWEpp(x64emu_t *emu, uintptr_t fnc);
void iWpiu(x64emu_t *emu, uintptr_t fnc);
void iWpip(x64emu_t *emu, uintptr_t fnc);
void iWpui(x64emu_t *emu, uintptr_t fnc);
void iWpuu(x64emu_t *emu, uintptr_t fnc);
void iWpup(x64emu_t *emu, uintptr_t fnc);
void iWppu(x64emu_t *emu, uintptr_t fnc);
void iWppp(x64emu_t *emu, uintptr_t fnc);
void uWpui(x64emu_t *emu, uintptr_t fnc);
void uWpup(x64emu_t *emu, uintptr_t fnc);
void vFEipV(x64emu_t *emu, uintptr_t fnc);
void vFEipA(x64emu_t *emu, uintptr_t fnc);
void vFEpii(x64emu_t *emu, uintptr_t fnc);
void vFEpup(x64emu_t *emu, uintptr_t fnc);
void vFEppp(x64emu_t *emu, uintptr_t fnc);
void vFiipV(x64emu_t *emu, uintptr_t fnc);
void vFipup(x64emu_t *emu, uintptr_t fnc);
void vFppup(x64emu_t *emu, uintptr_t fnc);
void iFEiip(x64emu_t *emu, uintptr_t fnc);
void iFEiiN(x64emu_t *emu, uintptr_t fnc);
void iFEipp(x64emu_t *emu, uintptr_t fnc);
void iFEipV(x64emu_t *emu, uintptr_t fnc);
void iFEipA(x64emu_t *emu, uintptr_t fnc);
void iFEupp(x64emu_t *emu, uintptr_t fnc);
void iFEpip(x64emu_t *emu, uintptr_t fnc);
void iFEpLi(x64emu_t *emu, uintptr_t fnc);
void iFEpLp(x64emu_t *emu, uintptr_t fnc);
void iFEppi(x64emu_t *emu, uintptr_t fnc);
void iFEppL(x64emu_t *emu, uintptr_t fnc);
void iFEppp(x64emu_t *emu, uintptr_t fnc);
void iFEppV(x64emu_t *emu, uintptr_t fnc);
void iFEppA(x64emu_t *emu, uintptr_t fnc);
void iFEpON(x64emu_t *emu, uintptr_t fnc);
void iFESpV(x64emu_t *emu, uintptr_t fnc);
void iFESpA(x64emu_t *emu, uintptr_t fnc);
void iFiiip(x64emu_t *emu, uintptr_t fnc);
void iFiiiN(x64emu_t *emu, uintptr_t fnc);
void iFiiII(x64emu_t *emu, uintptr_t fnc);
void iFiill(x64emu_t *emu, uintptr_t fnc);
void iFiipp(x64emu_t *emu, uintptr_t fnc);
void iFiIIi(x64emu_t *emu, uintptr_t fnc);
void iFiIIu(x64emu_t *emu, uintptr_t fnc);
void iFiupp(x64emu_t *emu, uintptr_t fnc);
void iFilli(x64emu_t *emu, uintptr_t fnc);
void iFipii(x64emu_t *emu, uintptr_t fnc);
void iFipip(x64emu_t *emu, uintptr_t fnc);
void iFipui(x64emu_t *emu, uintptr_t fnc);
void iFipuU(x64emu_t *emu, uintptr_t fnc);
void iFipLi(x64emu_t *emu, uintptr_t fnc);
void iFipLu(x64emu_t *emu, uintptr_t fnc);
void iFipLp(x64emu_t *emu, uintptr_t fnc);
void iFippi(x64emu_t *emu, uintptr_t fnc);
void iFippL(x64emu_t *emu, uintptr_t fnc);
void iFipON(x64emu_t *emu, uintptr_t fnc);
void iFuipp(x64emu_t *emu, uintptr_t fnc);
void iFuupi(x64emu_t *emu, uintptr_t fnc);
void iFupLp(x64emu_t *emu, uintptr_t fnc);
void iFpiip(x64emu_t *emu, uintptr_t fnc);
void iFpipi(x64emu_t *emu, uintptr_t fnc);
void iFpipu(x64emu_t *emu, uintptr_t fnc);
void iFpipp(x64emu_t *emu, uintptr_t fnc);
void iFpuiL(x64emu_t *emu, uintptr_t fnc);
void iFpupp(x64emu_t *emu, uintptr_t fnc);
void iFpLii(x64emu_t *emu, uintptr_t fnc);
void iFpLLu(x64emu_t *emu, uintptr_t fnc);
void iFpLpf(x64emu_t *emu, uintptr_t fnc);
void iFpLpd(x64emu_t *emu, uintptr_t fnc);
void iFpLpD(x64emu_t *emu, uintptr_t fnc);
void iFpLpL(x64emu_t *emu, uintptr_t fnc);
void iFpLpp(x64emu_t *emu, uintptr_t fnc);
void iFppii(x64emu_t *emu, uintptr_t fnc);
void iFppLp(x64emu_t *emu, uintptr_t fnc);
void iFpppi(x64emu_t *emu, uintptr_t fnc);
void iFpppL(x64emu_t *emu, uintptr_t fnc);
void iFpppp(x64emu_t *emu, uintptr_t fnc);
void iFpONN(x64emu_t *emu, uintptr_t fnc);
void iFSpiL(x64emu_t *emu, uintptr_t fnc);
void IFppii(x64emu_t *emu, uintptr_t fnc);
void IFppip(x64emu_t *emu, uintptr_t fnc);
void IFSIii(x64emu_t *emu, uintptr_t fnc);
void UFppii(x64emu_t *emu, uintptr_t fnc);
void UFppip(x64emu_t *emu, uintptr_t fnc);
void lFEipV(x64emu_t *emu, uintptr_t fnc);
void lFEppL(x64emu_t *emu, uintptr_t fnc);
void lFiiLu(x64emu_t *emu, uintptr_t fnc);
void lFiipL(x64emu_t *emu, uintptr_t fnc);
void lFipiI(x64emu_t *emu, uintptr_t fnc);
void lFipil(x64emu_t *emu, uintptr_t fnc);
void lFipLi(x64emu_t *emu, uintptr_t fnc);
void lFipLI(x64emu_t *emu, uintptr_t fnc);
void lFipLu(x64emu_t *emu, uintptr_t fnc);
void lFipLl(x64emu_t *emu, uintptr_t fnc);
void lFipLL(x64emu_t *emu, uintptr_t fnc);
void lFipLp(x64emu_t *emu, uintptr_t fnc);
void lFippL(x64emu_t *emu, uintptr_t fnc);
void lFppii(x64emu_t *emu, uintptr_t fnc);
void lFppip(x64emu_t *emu, uintptr_t fnc);
void lFppiS(x64emu_t *emu, uintptr_t fnc);
void lFpppL(x64emu_t *emu, uintptr_t fnc);
void LFEppL(x64emu_t *emu, uintptr_t fnc);
void LFipLL(x64emu_t *emu, uintptr_t fnc);
void LFippL(x64emu_t *emu, uintptr_t fnc);
void LFpupL(x64emu_t *emu, uintptr_t fnc);
void LFpLLS(x64emu_t *emu, uintptr_t fnc);
void LFpLpp(x64emu_t *emu, uintptr_t fnc);
void LFppii(x64emu_t *emu, uintptr_t fnc);
void LFppip(x64emu_t *emu, uintptr_t fnc);
void LFppLL(x64emu_t *emu, uintptr_t fnc);
void LFppLp(x64emu_t *emu, uintptr_t fnc);
void pFEpip(x64emu_t *emu, uintptr_t fnc);
void pFEppi(x64emu_t *emu, uintptr_t fnc);
void pFEppp(x64emu_t *emu, uintptr_t fnc);
void pFEppV(x64emu_t *emu, uintptr_t fnc);
void pFippu(x64emu_t *emu, uintptr_t fnc);
void pFdipp(x64emu_t *emu, uintptr_t fnc);
void pFDipp(x64emu_t *emu, uintptr_t fnc);
void pFpiii(x64emu_t *emu, uintptr_t fnc);
void pFpiip(x64emu_t *emu, uintptr_t fnc);
void pFpiLL(x64emu_t *emu, uintptr_t fnc);
void pFpuii(x64emu_t *emu, uintptr_t fnc);
void pFpuLL(x64emu_t *emu, uintptr_t fnc);
void pFpLip(x64emu_t *emu, uintptr_t fnc);
void pFpLpL(x64emu_t *emu, uintptr_t fnc);
void pFppiL(x64emu_t *emu, uintptr_t fnc);
void pFppip(x64emu_t *emu, uintptr_t fnc);
void pFppLL(x64emu_t *emu, uintptr_t fnc);
void pFpppi(x64emu_t *emu, uintptr_t fnc);
void pFpppL(x64emu_t *emu, uintptr_t fnc);
void pFpppp(x64emu_t *emu, uintptr_t fnc);
void pFpONN(x64emu_t *emu, uintptr_t fnc);
void pFSppi(x64emu_t *emu, uintptr_t fnc);
void vWpiiu(x64emu_t *emu, uintptr_t fnc);
void vWpuup(x64emu_t *emu, uintptr_t fnc);
void iWEpip(x64emu_t *emu, uintptr_t fnc);
void iWEpup(x64emu_t *emu, uintptr_t fnc);
void iWEppu(x64emu_t *emu, uintptr_t fnc);
void iWEppp(x64emu_t *emu, uintptr_t fnc);
void iWpiii(x64emu_t *emu, uintptr_t fnc);
void iWpiuu(x64emu_t *emu, uintptr_t fnc);
void iWpuiu(x64emu_t *emu, uintptr_t fnc);
void iWpuip(x64emu_t *emu, uintptr_t fnc);
void iWpuup(x64emu_t *emu, uintptr_t fnc);
void iWpupu(x64emu_t *emu, uintptr_t fnc);
void iWpupp(x64emu_t *emu, uintptr_t fnc);
void iWppuu(x64emu_t *emu, uintptr_t fnc);
void iWpppu(x64emu_t *emu, uintptr_t fnc);
void iWpppp(x64emu_t *emu, uintptr_t fnc);
void vFEiipV(x64emu_t *emu, uintptr_t fnc);
void vFEiipA(x64emu_t *emu, uintptr_t fnc);
void vFEpLLp(x64emu_t *emu, uintptr_t fnc);
void vFEppiV(x64emu_t *emu, uintptr_t fnc);
void vFppupp(x64emu_t *emu, uintptr_t fnc);
void iFEiipV(x64emu_t *emu, uintptr_t fnc);
void iFEiipA(x64emu_t *emu, uintptr_t fnc);
void iFEipip(x64emu_t *emu, uintptr_t fnc);
void iFEippi(x64emu_t *emu, uintptr_t fnc);
void iFEpipp(x64emu_t *emu, uintptr_t fnc);
void iFEpipV(x64emu_t *emu, uintptr_t fnc);
void iFEpipA(x64emu_t *emu, uintptr_t fnc);
void iFEpLpV(x64emu_t *emu, uintptr_t fnc);
void iFEpLpA(x64emu_t *emu, uintptr_t fnc);
void iFEppii(x64emu_t *emu, uintptr_t fnc);
void iFEppip(x64emu_t *emu, uintptr_t fnc);
void iFEpppi(x64emu_t *emu, uintptr_t fnc);
void iFEpppp(x64emu_t *emu, uintptr_t fnc);
void iFiiipu(x64emu_t *emu, uintptr_t fnc);
void iFiiipp(x64emu_t *emu, uintptr_t fnc);
void iFiuUip(x64emu_t *emu, uintptr_t fnc);
void iFipipi(x64emu_t *emu, uintptr_t fnc);
void iFipipu(x64emu_t *emu, uintptr_t fnc);
void iFipuip(x64emu_t *emu, uintptr_t fnc);
void iFipuui(x64emu_t *emu, uintptr_t fnc);
void iFipLup(x64emu_t *emu, uintptr_t fnc);
void iFippLi(x64emu_t *emu, uintptr_t fnc);
void iFippLp(x64emu_t *emu, uintptr_t fnc);
void iFipppi(x64emu_t *emu, uintptr_t fnc);
void iFipppp(x64emu_t *emu, uintptr_t fnc);
void iFuppLp(x64emu_t *emu, uintptr_t fnc);
void iFpiipi(x64emu_t *emu, uintptr_t fnc);
void iFpiipp(x64emu_t *emu, uintptr_t fnc);
void iFpipiu(x64emu_t *emu, uintptr_t fnc);
void iFpippW(x64emu_t *emu, uintptr_t fnc);
void iFpuppL(x64emu_t *emu, uintptr_t fnc);
void iFpLiLi(x64emu_t *emu, uintptr_t fnc);
void iFppiip(x64emu_t *emu, uintptr_t fnc);
void iFppipp(x64emu_t *emu, uintptr_t fnc);
void iFppLpi(x64emu_t *emu, uintptr_t fnc);
void iFppLpp(x64emu_t *emu, uintptr_t fnc);
void iFpppLi(x64emu_t *emu, uintptr_t fnc);
void iFpppLp(x64emu_t *emu, uintptr_t fnc);
void iFppppi(x64emu_t *emu, uintptr_t fnc);
void iFppppL(x64emu_t *emu, uintptr_t fnc);
void iFppppp(x64emu_t *emu, uintptr_t fnc);
void iFSppLp(x64emu_t *emu, uintptr_t fnc);
void lFEippL(x64emu_t *emu, uintptr_t fnc);
void lFEuipp(x64emu_t *emu, uintptr_t fnc);
void lFipiIi(x64emu_t *emu, uintptr_t fnc);
void lFipili(x64emu_t *emu, uintptr_t fnc);
void lFipLli(x64emu_t *emu, uintptr_t fnc);
void lFipLlL(x64emu_t *emu, uintptr_t fnc);
void lFipLLi(x64emu_t *emu, uintptr_t fnc);
void lFipLpp(x64emu_t *emu, uintptr_t fnc);
void LFpLLLp(x64emu_t *emu, uintptr_t fnc);
void LFpLppL(x64emu_t *emu, uintptr_t fnc);
void LFpLppp(x64emu_t *emu, uintptr_t fnc);
void LFppLLp(x64emu_t *emu, uintptr_t fnc);
void LFppLpL(x64emu_t *emu, uintptr_t fnc);
void LFppppp(x64emu_t *emu, uintptr_t fnc);
void pFipipL(x64emu_t *emu, uintptr_t fnc);
void pFppipi(x64emu_t *emu, uintptr_t fnc);
void pFpppLi(x64emu_t *emu, uintptr_t fnc);
void iWEpiup(x64emu_t *emu, uintptr_t fnc);
void iWEpipp(x64emu_t *emu, uintptr_t fnc);
void iWpiiii(x64emu_t *emu, uintptr_t fnc);
void iWpiupu(x64emu_t *emu, uintptr_t fnc);
void iWpuiii(x64emu_t *emu, uintptr_t fnc);
void iWpuiup(x64emu_t *emu, uintptr_t fnc);
void iWpuupu(x64emu_t *emu, uintptr_t fnc);
void iWpuupp(x64emu_t *emu, uintptr_t fnc);
void iWpupuu(x64emu_t *emu, uintptr_t fnc);
void iWpupup(x64emu_t *emu, uintptr_t fnc);
void iWpuppu(x64emu_t *emu, uintptr_t fnc);
void iWpuppp(x64emu_t *emu, uintptr_t fnc);
void iWpppuu(x64emu_t *emu, uintptr_t fnc);
void iWpppup(x64emu_t *emu, uintptr_t fnc);
void iWppppp(x64emu_t *emu, uintptr_t fnc);
void vFEpLLpp(x64emu_t *emu, uintptr_t fnc);
void vFiipupV(x64emu_t *emu, uintptr_t fnc);
void iFEiippi(x64emu_t *emu, uintptr_t fnc);
void iFEiLLLL(x64emu_t *emu, uintptr_t fnc);
void iFEipiup(x64emu_t *emu, uintptr_t fnc);
void iFEpilpV(x64emu_t *emu, uintptr_t fnc);
void iFEpuppp(x64emu_t *emu, uintptr_t fnc);
void iFiuuuup(x64emu_t *emu, uintptr_t fnc);
void iFiuuppp(x64emu_t *emu, uintptr_t fnc);
void iFipppLp(x64emu_t *emu, uintptr_t fnc);
void iFippppp(x64emu_t *emu, uintptr_t fnc);
void iFdipppL(x64emu_t *emu, uintptr_t fnc);
void iFDipppL(x64emu_t *emu, uintptr_t fnc);
void iFlpippp(x64emu_t *emu, uintptr_t fnc);
void iFpipppp(x64emu_t *emu, uintptr_t fnc);
void iFpWpppp(x64emu_t *emu, uintptr_t fnc);
void iFpuiCpp(x64emu_t *emu, uintptr_t fnc);
void iFpuippp(x64emu_t *emu, uintptr_t fnc);
void iFppiiip(x64emu_t *emu, uintptr_t fnc);
void iFppiipi(x64emu_t *emu, uintptr_t fnc);
void iFpppLpp(x64emu_t *emu, uintptr_t fnc);
void iFppppLp(x64emu_t *emu, uintptr_t fnc);
void lFipipLu(x64emu_t *emu, uintptr_t fnc);
void lFipLipu(x64emu_t *emu, uintptr_t fnc);
void lFipLipp(x64emu_t *emu, uintptr_t fnc);
void lFipLpLL(x64emu_t *emu, uintptr_t fnc);
void LFppLLpL(x64emu_t *emu, uintptr_t fnc);
void LFSpLiip(x64emu_t *emu, uintptr_t fnc);
void pFEpLLiN(x64emu_t *emu, uintptr_t fnc);
void pFEppLLp(x64emu_t *emu, uintptr_t fnc);
void pFEpppLp(x64emu_t *emu, uintptr_t fnc);
void pFSpiiii(x64emu_t *emu, uintptr_t fnc);
void iWEpuuip(x64emu_t *emu, uintptr_t fnc);
void iWEppppp(x64emu_t *emu, uintptr_t fnc);
void iWpiiiip(x64emu_t *emu, uintptr_t fnc);
void iWpiiuii(x64emu_t *emu, uintptr_t fnc);
void iWpiuppu(x64emu_t *emu, uintptr_t fnc);
void iWpuiiii(x64emu_t *emu, uintptr_t fnc);
void iWpppppi(x64emu_t *emu, uintptr_t fnc);
void iWpppppu(x64emu_t *emu, uintptr_t fnc);
void iFEpLiLpp(x64emu_t *emu, uintptr_t fnc);
void iFEpLiLpV(x64emu_t *emu, uintptr_t fnc);
void iFEpppppp(x64emu_t *emu, uintptr_t fnc);
void iFiupuuup(x64emu_t *emu, uintptr_t fnc);
void iFiupuppp(x64emu_t *emu, uintptr_t fnc);
void iFuippLpp(x64emu_t *emu, uintptr_t fnc);
void iFpippLpp(x64emu_t *emu, uintptr_t fnc);
void iFpippppW(x64emu_t *emu, uintptr_t fnc);
void iFpWppppW(x64emu_t *emu, uintptr_t fnc);
void iFpuiCuCp(x64emu_t *emu, uintptr_t fnc);
void iFpupupui(x64emu_t *emu, uintptr_t fnc);
void pFEpLiiiI(x64emu_t *emu, uintptr_t fnc);
void pFEpLiiil(x64emu_t *emu, uintptr_t fnc);
void iWpiiuuuu(x64emu_t *emu, uintptr_t fnc);
void iWpuiiiip(x64emu_t *emu, uintptr_t fnc);
void iWpuiiuii(x64emu_t *emu, uintptr_t fnc);
void iWpuipupp(x64emu_t *emu, uintptr_t fnc);
void iWpuuuppu(x64emu_t *emu, uintptr_t fnc);
void iWpupuufu(x64emu_t *emu, uintptr_t fnc);
void iWpppuppp(x64emu_t *emu, uintptr_t fnc);
void iFEpippppp(x64emu_t *emu, uintptr_t fnc);
void iFEppipppp(x64emu_t *emu, uintptr_t fnc);
void iFpuippLpp(x64emu_t *emu, uintptr_t fnc);
void iFppipiipi(x64emu_t *emu, uintptr_t fnc);
void iWEpuuiipp(x64emu_t *emu, uintptr_t fnc);
void iWEpuuuipp(x64emu_t *emu, uintptr_t fnc);
void iWpuipuppp(x64emu_t *emu, uintptr_t fnc);
void iFipiipippi(x64emu_t *emu, uintptr_t fnc);
void iFppipiiipi(x64emu_t *emu, uintptr_t fnc);
void iWEpuuiippu(x64emu_t *emu, uintptr_t fnc);
void iWEpuuuiipp(x64emu_t *emu, uintptr_t fnc);
void iWpiuuupipu(x64emu_t *emu, uintptr_t fnc);
void iWpuiuuipip(x64emu_t *emu, uintptr_t fnc);
void iWppppupiii(x64emu_t *emu, uintptr_t fnc);
void lFpLppdddddd(x64emu_t *emu, uintptr_t fnc);
void iWEpuipupppp(x64emu_t *emu, uintptr_t fnc);
void iWEpuuiiuipp(x64emu_t *emu, uintptr_t fnc);
void iWEpuuuuiipp(x64emu_t *emu, uintptr_t fnc);
void iWEpuipuppppp(x64emu_t *emu, uintptr_t fnc);
void iWEpuuiiuippu(x64emu_t *emu, uintptr_t fnc);
void iWEpuuuuuiipp(x64emu_t *emu, uintptr_t fnc);

#if defined(NOALIGN)
void iFppu(x64emu_t *emu, uintptr_t fnc);
void iFipiip(x64emu_t *emu, uintptr_t fnc);
#endif

#if !defined(NOALIGN)
void iFELp(x64emu_t *emu, uintptr_t fnc);
void iFEppu(x64emu_t *emu, uintptr_t fnc);
void iFEiiip(x64emu_t *emu, uintptr_t fnc);
void iFEipii(x64emu_t *emu, uintptr_t fnc);
void iFEipiip(x64emu_t *emu, uintptr_t fnc);
#endif

#if defined(ANDROID)
void vFEpppp(x64emu_t *emu, uintptr_t fnc);
#endif

#if defined(STATICBUILD)
void pFLp(x64emu_t *emu, uintptr_t fnc);
void pFpLLp(x64emu_t *emu, uintptr_t fnc);
#endif

#if !defined(STATICBUILD)
void vFLL(x64emu_t *emu, uintptr_t fnc);
void lFiN(x64emu_t *emu, uintptr_t fnc);
void iFlip(x64emu_t *emu, uintptr_t fnc);
void iFLLi(x64emu_t *emu, uintptr_t fnc);
void iFpup(x64emu_t *emu, uintptr_t fnc);
void iFLLii(x64emu_t *emu, uintptr_t fnc);
void iFpiii(x64emu_t *emu, uintptr_t fnc);
void iFppuu(x64emu_t *emu, uintptr_t fnc);
void WFpLLu(x64emu_t *emu, uintptr_t fnc);
void iFEipup(x64emu_t *emu, uintptr_t fnc);
void iFppuup(x64emu_t *emu, uintptr_t fnc);
void iFEiipup(x64emu_t *emu, uintptr_t fnc);
void iFpipppL(x64emu_t *emu, uintptr_t fnc);
void lFpLpdddddd(x64emu_t *emu, uintptr_t fnc);
#endif

void vFEv(x64emu_t *emu, uintptr_t fnc);
void iFEv(x64emu_t *emu, uintptr_t fnc);
void lFEv(x64emu_t *emu, uintptr_t fnc);
void pFEv(x64emu_t *emu, uintptr_t fnc);
void iFEvpp(x64emu_t *emu, uintptr_t fnc);
void pFEppv(x64emu_t *emu, uintptr_t fnc);
void iFEpvpp(x64emu_t *emu, uintptr_t fnc);
void iFEpvvppp(x64emu_t *emu, uintptr_t fnc);
void iFEpuvvppp(x64emu_t *emu, uintptr_t fnc);

int isSimpleWrapper(wrapper_t fun);

#endif // __WRAPPER_H_
